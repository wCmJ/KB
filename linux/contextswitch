keywords:
    上下文切换
    vmstat
    cs
    in
    r
    b
    cswch
    nvcswch
    sysbench


进程竞争CPU时并没有真正运行，还是会导致系统负载升高。根本原因在于CPU上下文切换。
Linux为每个CPU维护一个就绪队列，将活跃进程按照优先级及等待时间排序，选择最高优先级的进程执行。
    切换触发条件：
        - 时间片用完
        - 等待资源
        - 主动挂起：sleep等
        - 被更高优先级进程抢占
        - 发生硬件中断

上下文切换具体指CPU寄存器、程序计数器PC的存储及更新。
    - 进程上下文切换
        - 内核：寄存器、PC
        - 用户态：虚拟内存、栈、全局变量及其他用户态资源
        - TLB：虚拟内存与实际内存映射表，多个CPU共享，刷新缓存不仅会影响当前处理器的进程，还会影响共享缓存的其他处理器进程

    - 线程上下文切换
        - 线程拥有自己的数据：栈、寄存器
        - 前后两个线程属于不同的进程，等同于进程切换
        - 前后两个线程属于相同进程，只需要切换线程私有数据、寄存器等。不需要切换虚拟内存等资源。

    - 中断上下文切换
        - 只包含内核态中断服务程序执行所必须的状态：CPU寄存器、内核堆栈、硬件中断参数等
        - 中断处理比进程拥有更高优先级，所以中断上下文切换和进程上下文切换不会同时发生

过多的上下文切换，会把CPU时间消耗在寄存器、内核栈以及虚拟内存等数据的保存和恢复上，缩短进程真正运行的时间，成了系统性能大幅下降的一个元凶。

使用vmstat，查询系统上下文切换情况。

    vmstat：给出系统总体的上下文切换情况
        - 常用的系统性能分析工具，主要用来分析系统的内存使用情况，也常用来分析CPU上下文切换和中断的次数
        - cs：每秒上下文切换次数
        - in：每秒中断次数
        - r：就绪队列长度，正在运行或等待运行CPU的进程数
        - b：处于不可中断睡眠状态的进程数
        - pidstat -w 5：
            - cswch：每秒自愿上下文切换
            - nvcswch：每秒非自愿上下文切换
        
sysbench:
    - sysbench --threads=10 --max-time=300 threads run
    


